// <auto-generated />
using System;
using BurgerShopOrdering.core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BurgerShopOrdering.core.Migrations
{
    [DbContext(typeof(BurgerShopDbContext))]
    partial class BurgerShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BurgerShopOrdering.core.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000001",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4ab68b3d-1647-46ce-b662-2013ea820e65",
                            Email = "ashleysfritje@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ashleys",
                            LastName = "Fritje",
                            LockoutEnabled = false,
                            NormalizedEmail = "ASHLEYSFRITJE@HOTMAIL.COM",
                            NormalizedUserName = "ASHLEYSFRITJE@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAOACCkwZgHlk4hAwJTVShhms0I2f47uPlM3UtieIMbz5vJkvuZ57D6inPCdsga0bg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e3108fff-79c7-46e5-b3bb-f9a3bfc57c22",
                            TwoFactorEnabled = false,
                            UserName = "ashleysfritje@hotmail.com"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000002",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "82d0b33d-b0e4-4caf-82af-2eae3b6a3361",
                            Email = "MarieFranck@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Marie",
                            LastName = "Franck",
                            LockoutEnabled = false,
                            NormalizedEmail = "MARIEFRANCK@HOTMAIL.COM",
                            NormalizedUserName = "MARIEFRANCK@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEN7JGArYpOjwGl0DHxw+y2Eqvwn4HtlXnFUfdw7DagJ9ki5dG7qJtNLVwXOrEk4k7w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ef6084d7-b1fb-4f1e-99ee-9966ac242892",
                            TwoFactorEnabled = false,
                            UserName = "MarieFranck@hotmail.com"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000003",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4c77dfb2-33e9-4caf-aeaf-efb2e7d0fce4",
                            Email = "lucy.mol@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lucy",
                            LastName = "Mol",
                            LockoutEnabled = false,
                            NormalizedEmail = "LUCY.MOL@HOTMAIL.COM",
                            NormalizedUserName = "LUCY.MOL@HOTMAIL.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMG9FOP4BUwzhylT8m+i1FOnaB1sqYOt/CeyavtVOujI5c4z49SGAJcPLPsag1XCsw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5aecf751-2160-47ce-b65c-cfb8fd327fd5",
                            TwoFactorEnabled = false,
                            UserName = "lucy.mol@hotmail.com"
                        });
                });

            modelBuilder.Entity("BurgerShopOrdering.core.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000010"),
                            IsVisible = true,
                            Name = "Frieten"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000011"),
                            IsVisible = true,
                            Name = "Burgers"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000012"),
                            IsVisible = true,
                            Name = "Vlees"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000013"),
                            IsVisible = true,
                            Name = "Vis"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000014"),
                            IsVisible = true,
                            Name = "Kaas"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000015"),
                            IsVisible = true,
                            Name = "Kinderen"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000016"),
                            IsVisible = true,
                            Name = "Koude Sauzen"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000017"),
                            IsVisible = true,
                            Name = "Warme Sauzen"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000018"),
                            IsVisible = true,
                            Name = "Drinken"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000019"),
                            IsVisible = true,
                            Name = "Vegetarisch"
                        });
                });

            modelBuilder.Entity("BurgerShopOrdering.core.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateDelivered")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrdered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BurgerShopOrdering.core.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("BurgerShopOrdering.core.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000025"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Mini friet",
                            Price = 2.40m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000026"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Kleine friet",
                            Price = 2.80m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000027"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Medium friet",
                            Price = 3.40m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000028"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Grote friet",
                            Price = 4.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000029"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Familie pak",
                            Price = 8.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000030"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Bicky Burger",
                            Price = 4.40m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000031"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Bicky Cheese",
                            Price = 4.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000032"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Bicky Fish",
                            Price = 4.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000033"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Bicky Chicken",
                            Price = 4.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000034"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Bicky Vegi",
                            Price = 4.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000035"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Berenpoot",
                            Price = 3.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000036"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Stoofvlees",
                            Price = 4.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000037"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Bitterballen",
                            Price = 2.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000038"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Twijfelaar",
                            Price = 4.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000039"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Zigeunerstick",
                            Price = 3.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000040"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Boulet",
                            Price = 3.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000041"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Cervela",
                            Price = 3.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000042"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Curryworst",
                            Price = 2.40m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000043"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Curryworst Speciaal",
                            Price = 3.40m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000044"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Goulash kroket",
                            Price = 3.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000045"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Kipcorn",
                            Price = 3.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000046"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Kippen nuggets",
                            Price = 4.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000047"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Kipfingers",
                            Price = 4.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000048"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Loempia",
                            Price = 4.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000049"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Viandel",
                            Price = 3.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000050"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Sate",
                            Price = 4.40m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000051"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Visstick",
                            Price = 4.70m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000052"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Kaaskroket",
                            Price = 2.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000053"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Kaassouffle",
                            Price = 2.80m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000054"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Mozarella vingers",
                            Price = 4.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000055"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Boy box",
                            Price = 6.50m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000056"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Girl box",
                            Price = 6.50m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000057"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Mayonaise",
                            Price = 1.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000058"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Tomaten ketchup",
                            Price = 1.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000059"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Curry ketchup",
                            Price = 1.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000060"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Andalouse",
                            Price = 1.40m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000061"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Americain",
                            Price = 1.40m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000062"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Tartaar",
                            Price = 1.40m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000063"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Looksaus",
                            Price = 1.40m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000064"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Pindasaus",
                            Price = 2.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000065"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Stoofvleessaus",
                            Price = 2.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000066"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Currysaus",
                            Price = 2.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000067"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Coca cola",
                            Price = 2.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000068"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Coca cola zero",
                            Price = 2.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000069"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Sprite",
                            Price = 2.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000070"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Fanta",
                            Price = 2.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000071"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Ice tea",
                            Price = 2.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000072"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Jupiler",
                            Price = 2.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000073"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Water plat",
                            Price = 2.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000074"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Water bruis",
                            Price = 2.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000075"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Vegi bitterballen",
                            Price = 3.00m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000076"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Nasi schijf",
                            Price = 3.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000077"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Mini loempia",
                            Price = 4.20m
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000078"),
                            Image = "defaultproduct.jpg",
                            IsVisible = true,
                            Name = "Vegi curryworst",
                            Price = 3.70m
                        });
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<Guid>("CategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");

                    b.HasData(
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000010"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000025")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000010"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000026")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000010"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000027")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000010"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000028")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000010"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000029")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000011"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000030")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000011"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000031")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000011"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000032")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000011"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000033")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000011"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000034")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000030")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000031")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000033")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000035")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000036")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000037")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000038")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000039")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000040")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000041")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000042")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000043")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000044")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000045")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000046")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000047")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000048")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000049")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000012"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000050")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000013"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000032")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000013"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000051")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000014"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000052")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000014"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000053")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000014"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000054")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000015"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000055")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000015"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000056")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000016"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000057")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000016"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000058")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000016"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000059")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000016"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000060")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000016"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000061")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000016"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000062")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000016"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000063")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000017"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000064")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000017"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000065")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000017"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000066")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000018"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000067")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000018"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000068")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000018"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000069")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000018"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000070")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000018"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000071")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000018"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000072")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000018"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000073")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000018"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000074")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000019"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000052")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000019"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000053")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000019"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000054")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000019"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000075")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000019"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000076")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000019"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000077")
                        },
                        new
                        {
                            CategoriesId = new Guid("00000000-0000-0000-0000-000000000019"),
                            ProductsId = new Guid("00000000-0000-0000-0000-000000000078")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000004",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "00000000-0000-0000-0000-000000000005",
                            Name = "Client",
                            NormalizedName = "CLIENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000001",
                            RoleId = "00000000-0000-0000-0000-000000000004"
                        },
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000002",
                            RoleId = "00000000-0000-0000-0000-000000000005"
                        },
                        new
                        {
                            UserId = "00000000-0000-0000-0000-000000000003",
                            RoleId = "00000000-0000-0000-0000-000000000005"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BurgerShopOrdering.core.Entities.Order", b =>
                {
                    b.HasOne("BurgerShopOrdering.core.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("Orders")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("BurgerShopOrdering.core.Entities.OrderItem", b =>
                {
                    b.HasOne("BurgerShopOrdering.core.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerShopOrdering.core.Entities.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("BurgerShopOrdering.core.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerShopOrdering.core.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BurgerShopOrdering.core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BurgerShopOrdering.core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BurgerShopOrdering.core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BurgerShopOrdering.core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BurgerShopOrdering.core.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BurgerShopOrdering.core.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("BurgerShopOrdering.core.Entities.Product", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
